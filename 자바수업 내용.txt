blog.naver.com/jrj8819
1. 버전 관리 프로그램 : http://www.git-scm.com/downloads/
2. 깃 GUI버전 : https://www.sourcetreeapp.com/
3. github 를 통해  : http://www.github.com/
-소스의 이동이 편리
-버전관리 가능

!소스코드 실행법!
클론 생성 ->선택 내용 스테이지에 올리기-> 설명 작성->
커밋 ->브랜치의 master-> push->올릴파일 선택 후 push->
github에 등록 됨

!소스코드 파일 수정 & 롤백!
파일 업뎃 : 파일 수정 -> 스테이지에 올리기 -> 커밋 -> push

롤백 : 브랜치의 master->오른쪽 하단 코드뭉치 되돌리기(본 파일에서 새로 추가된 부분이 사라짐)->
(코드의 초록색 배경 부분이 새로 추가된 부분)


Software
Development
Kit
MVC : Model : 자료의 형태 = DB
	   View : 사용자에게 보여지는 부분(버튼,결과창) =CSS/HTML
	   Controller : 기능 = JS
-메소드 : 함수=자주쓰는 명령어를 정리한 것
-스코프 : 변수의 범위, 변수가 유효하게 사용되는 범위
 f(x)  =  x  +  2
함수   변수
-자주 사용하는 명령어들의 모음 - for if 등등의 여러 명령어들이 하나의 완성된 작업을 하도록 묶어만들고 필요할때 호출하는 방식으로 사용
입력 : 재료
기능 : 만드는 과정
출력 : 결과
-public static void main(){return x;}
public/private : 접근 한정자 - 다른곳에서 호출할때 활용의 범위를 정해준다.
static : 함수의 호출 형태, 함수나 변수에서 객체를 사용한 것인가를 정하는 것
void : 출력의 형태(자료형) ex) int double file string...
	void=출력 값이 없음(계산이 사용된 것이 아닌 단순한 기능)
main : 함수의 이름(함수의 기능이 나타나는 이름이 좋음)
() : 재료를 입력 외부에서 값을 받아옴 - 자료의 형태도 같이 넣어주고 변수의 이름도 임의로 정할 수 있음
return : 함수 안에서 결과로 나온 값을 출력해서 밖으로 내보냄
-결과값이 있는경우 함수를 변수로 선언할 수 있다.
int result = function(a,b); ->function 함수에 return값이 존재

인스턴스 = 클래스로부터 만들어진 객체
기능 : 데이터를 변화시키는 행위
데이터 : 값들

클래스의 사용 
클래스 이름 인스턴스 이름 = new 클래스이름();
클래스의 변수 사용 : 인스턴스이름.클래스 변수 이름
클래스의 함수 사용 : 인스턴스 이름.클래스 함수 이름();
class Car{
	int car1;
	public void gogo(){
		int car1; = gogo()함수 안에 있는 car1
		this.car1; = Car클래스에서 선언된 변수 car1
	}
}
문자열의 비교는 equals("")이용하여 비교
서로 다른 클래스에서 변수에 초기값을 줄때 객체를 생성한 후
생성자를 통해서 초기값을 넣어줌
생성자 : 객체를 생성한 수 가장 먼저 실행되며 클래스의 변수를 초기화 하는 역할
생성자↔소멸자
소멸자 : 객체가 사라지기 전에 실행하는 함수
클래스 이름 인스턴스 이름 = new 생성자=[클래스이름();]
클래스에서 변수가 선언되면 그 변수의 초기값을 정해주는 함수
클래스명(){
	값 초기화
}
static 변수는 값이 변화하면 변화된 값을 공유함
클래스명.변수 로 사용 가능
fanal변수에 데이터를 입력하면 그 값은 변하지 않는다.
static함수의 사용 : 클래스 이름.함수 명
static함수에서는 일반적인 변수를 사용할 경우 문제가 된다.
(static 함수는 객체를 만들지 않고 사용하기 때문에)


배열 생성
int[] arr1 = new int[7]
int형 배열 7칸 생성
[0][1][2][3][4][5][6]
String[] strArr = new String[3]
strArr[0] = new String("aaa");
strArr[1] = new String("aaa");
strArr[2] = new String("aaa");
객체의 배열을 생성하는 경우
배열의 값 초기화
-int[] arr = {1,2,3};
-String[] strArr = {"aaa","bbb","ccc"};
-Person_arr = {new Person(),new Person(),new Person()};

ArrayList 배열의 사이즈를 정하지 않고 배열을 만듬
ArrayList<Integer> arrlist = new ArrayList<Integer>();
arrlist.add(x);
arrlist.add(x);
arrlist.add(x);
arrlist.get(0);
arrlist.get(1);
arrlist.get(2);
add를 통해 입력 + 저장공간 확장
get을 통해 정보를 가져옴
remove를 통해 배열의 값을 삭제
size를 통해 배열의 사이즈 확인


이벤트가 발생하면 리스너가 실제로 처리
따라서 실제로 처리할 코드를 작성할 리스너를 생성하고 
해당 컴포넌트에 등록을 시켜줘야 한다.

try - catch
try문에서 에러 발생시 catch문으로 넘어감
에러를 처리하기 위한 함수를 만들때 throw excpt;를 작성해야 한다.

자식 클래스는 부모의 함수나 변수를 가져올 수 있음
class를 상속 받을 때 extends 'class명' 으로 상속 받음

private로 정의된 함수나 변수를 사용하기 위해서
getter와 setter 의 역할을 하는 함수를 선언 

----------------------------------------------------------------------------------------------------------------------------
android - 컴포넌트들이 기능을 하도록 하려면 ID를 부여해야한다.

1. 컴포넌트 ID확인
2. 코드에서 컴포넌트 객체 생성
3. 리스너 만들기
4. 리스너의 객체 만들기
5. 코드의 컴포넌트 객체에 리스너 등록


Integer.parseInt(String a) == sting a의 값을 int로 바꿔줌
Integer.toString(int a) == int a의 값을 String로 바꿔줌


화면 추가 
1. 자바파일 추가 super 에 AppCompatActivity로 만들기
2. 레이아웃 파일 추가
3. 코드에 setContentView(R.layout.//레이아웃이름//); 작성
4. Manifest 파일에 <activity android:name=".자바파일명"></activity> 작성

*finish(); 현재 화면을 닫고 이전 화면으로 돌아감

리스트 뷰 
Data-> Adapter-> ListView-> Listener
1.Data - 웹서버,DB서버(소켓),파일,코드(직접 매칭),내장DB(SQLite)에서 데이터를 가져옴
2.Adapter - 리스트 뷰에 데이터를 매칭시켜주는 역할(Binding)
-리스트 뷰의 리스너는 AdapterView.OnItemClickListener로 만든다.
데이터 파일 만들기
values폴더에 values xml생성

Activity 끼리의 데이터 수신
1. activity A에서 intent A만듬
2. intent A 에 보낼 데이터 추가
3. 화면 전환 후  activity B 는 intent A 를 수신
4. intent A가 보낸 데이터를 읽음
5. activity B는 데이터 처리 후 intent B 에 데이터 추가
6. 화면 전환 후 activity A 는 intent B 를 OnActivityResult()함수로 받아서 데이터를 처리

리스트를 누르면 새로운 Activity로 이동하기 위한 구현 방식
1. 각 항목 마다 별도의 activity를 만듬(대량의 activity가 필요)
2. 공통의 Activity를 만들고 데이터를 바꾸어 출력


이미지뷰setImageResource(R.drawable.파일명); // 이미지 뷰에 이미지를 설정
이미지 파일을 리소스로 만들때 TypedArray사용
TypedArray 객체명 = getResources().obtainTypedArray(R.array.id명); 객체에 리소스를 연결 
이미지 뷰id.setImageResource(리소스 이미지 id.getResourceId(movie_index,-1));

Date/Time피커 만들기
1. 다이얼로그 만들기
      -DatePickerDialog
      -TimePickerDialog
2. Date/Time피커 다이얼로그 리스너 만들기
      -class 리스너 명 implements  (Date/Time)PickerDialog . On(Date/Time)SetListener{}
3. 리스너 객체 만들기
4. 버튼의 onClick함수에서 다이얼로그 호출
      -new DatePickerDialog(실행할 엑티비티,데이트피커 리스너,year,month,day).show();
      -new TimePickerDialog(실행할 엑티비티,타임피커 리스너,hour,minute,boolean-12/24시간구분-).show();

날짜 얻는 방법
GregorianCalendar . 구하고자 하는 연,월,일

스피너의 생성
1. 스피너를 생성할때 어댑터를 연결하기 까지는 리스트 뷰와 유사함
2. 이후 adapter이름.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);로
3. 스피너의 틀을 만들어야 함
4. 리스너를 생성할 AdapterView.OnItemSelectedListener 로 생성

어플 내부에서 다른 어플을 불러오는 경우 Intent사용
Intent를 생성할 때
Intent intent명 = new Intnet(Intent.ACTION_VIEW,Uri.parse("  *  "));

*에 써넣는 것에 따라 intent의 성격이 달라지며 각각의 기능이 따로 권한이 필요함
-인터넷 = http://
<uses-permission android:name="android.permission.INTERNET" />
-전화 = tel:전화번호
<uses-permission android:name="android.permission.CALL_PHONE" />
-주소록 = content://contacts/
<uses-permission android:name="android.permission.READ_CONTACTS" />
<uses-permission android:name="android.permission.WRITE_CONTACTS" />
-지도 = geo:위도, 경도

WebView의 생성
1. 객체 만들기
2. Websetting이 필요함
-Webstting 웹세팅 명 = 웹뷰 명.getSetting();
3. 자바 스크립트 허용
-웹 세팅 명.setJavaScriptEnabled(true);
4. 페이지 로드하기
웹뷰 명.loadUrl("페이지")
+
새 창에 페이지가 나타나는 것을 방지\
웹뷰 명.setWebViewClient(new WebViewClient() {
     public boolean shouldoverrideUrlLoading(WebView view, String url){
         view.loadUrl(url);
         return true;
     }
});
웹뷰를 사용하기 위한 권한
<uses-permission android:name="android.permission.INTERNET" />

토글버튼과 스위치의 리스너는
CompoundButton.OnCheckedChangeListener 로 작성한다.

파일 입출력 = stream을 통해서 입출력을 사용
input stream : 파일에서 자료로 보내는 것
output stream : 자료를 파일로 보내는 것
파일 입출력을 사용할 때 try catch문을 꼭 사용해야 한다.

Preference
-사용하지 쉽지만 저장할 데이터가 많아지면 느려진다.
-만들어질 파일 이름, 권한 필요

리스트 뷰에서 자바 클래스를 새로 작성하고 레이아웃을 추가하여 리스트의 한 항목의 디자인이 가능하다.
클래스를 생성할 때 슈퍼클래스를 BaseAdapter로 설정하고
Overrides Dialog에서 getCount,getItem,getItemId,getView의 안드로이드 위젯을 선택하여 생성한다.